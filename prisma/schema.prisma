generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model time {
  id Int @id @default(autoincrement())

  user   user? @relation(fields: [userId], references: [id])
  userId Int?

  start     DateTime  @db.DateTime(2)
  startType String?   @db.Text
  end       DateTime? @db.DateTime(2)
  endType   String?   @db.Text

  time  String? // Passed time from start to end
  notes String? @db.MediumText

  project   project? @relation(fields: [projectId], references: [id]) // Related Project
  projectId String?
}

model project {
  id String @id @default(cuid())

  name        String
  description String?

  todos todo[] // Related Todos
  times time[] // Related Times
  users user[] // Users with this project
}

model todo {
  id String @id @default(cuid())

  task        String  @db.MediumText
  description String? @db.Text

  deadline DateTime?

  done       Boolean @default(false) // Finish todo
  inProgress Boolean @default(false) // Progressing the todo
  archived   Boolean @default(false) // Finished the todo
  trash      Boolean @default(false) // Hidden, can be toggled after archived

  relatedProjects project[] // Any related projects to this todo

  assignees user[] @relation("assignee") // Assigned users of the todo

  creator   user? @relation("creator", fields: [creatorId], references: [id])
  creatorId Int?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model user {
  id Int @id @default(autoincrement())

  tag      String @unique
  password String

  name  String?
  email String? @unique
  role  String

  chips chip[]
  times time[]

  projects project[]

  assignedTodos todo[] @relation("assignee")
  createdTodos  todo[] @relation("creator")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model chip {
  id String @id

  user   user @relation(fields: [userId], references: [id])
  userId Int

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
